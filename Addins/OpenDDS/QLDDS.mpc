// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      qldds/gensrc/stubs/stub.opendds.mpc

//
//   Copyright (C) 2016 Mike Kipnis

//   This file is part of QLDDS, a free-software/open-source library
//   for utilization of QuantLib in the distributed envrionment via DDS.

//   Permission is hereby granted, free of charge, to any person obtaining a copy
//   of this software and associated documentation files (the "Software"), to deal
//   in the Software without restriction, including without limitation the rights
//   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//   copies of the Software, and to permit persons to whom the Software is
//   furnished to do so, subject to the following conditions:

//   The above copyright notice and this permission notice shall be included in all
//   copies or substantial portions of the Software.

//   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//   SOFTWARE.


project(garbagecollection) : dcps {

  sharedname     = garbagecollection
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	garbagecollection.idl

  }

  IDL_Files {
        	garbagecollection.idl

        	garbagecollectionTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(logging) : dcps {

  sharedname     = logging
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	logging.idl

  }

  IDL_Files {
        	logging.idl

        	loggingTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(ohutils) : dcps {

  sharedname     = ohutils
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	ohutils.idl

  }

  IDL_Files {
        	ohutils.idl

        	ohutilsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(serialization) : dcps {

  sharedname     = serialization
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	serialization.idl

  }

  IDL_Files {
        	serialization.idl

        	serializationTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(valueobjects) : dcps {

  sharedname     = valueobjects
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	valueobjects.idl

  }

  IDL_Files {
        	valueobjects.idl

        	valueobjectsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(abcd) : dcps {

  sharedname     = abcd
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	abcd.idl

  }

  IDL_Files {
        	abcd.idl

        	abcdTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(accountingengines) : dcps {

  sharedname     = accountingengines
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	accountingengines.idl

  }

  IDL_Files {
        	accountingengines.idl

        	accountingenginesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(alphaform) : dcps {

  sharedname     = alphaform
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	alphaform.idl

  }

  IDL_Files {
        	alphaform.idl

        	alphaformTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(assetswap) : dcps {

  sharedname     = assetswap
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	assetswap.idl

  }

  IDL_Files {
        	assetswap.idl

        	assetswapTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(bonds) : dcps {

  sharedname     = bonds
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	bonds.idl

  }

  IDL_Files {
        	bonds.idl

        	bondsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(browniangenerators) : dcps {

  sharedname     = browniangenerators
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	browniangenerators.idl

  }

  IDL_Files {
        	browniangenerators.idl

        	browniangeneratorsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(btp) : dcps {

  sharedname     = btp
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	btp.idl

  }

  IDL_Files {
        	btp.idl

        	btpTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(capfloor) : dcps {

  sharedname     = capfloor
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	capfloor.idl

  }

  IDL_Files {
        	capfloor.idl

        	capfloorTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(capletvolstructure) : dcps {

  sharedname     = capletvolstructure
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	capletvolstructure.idl

  }

  IDL_Files {
        	capletvolstructure.idl

        	capletvolstructureTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(cmsmarket) : dcps {

  sharedname     = cmsmarket
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	cmsmarket.idl

  }

  IDL_Files {
        	cmsmarket.idl

        	cmsmarketTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(correlation) : dcps {

  sharedname     = correlation
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	correlation.idl

  }

  IDL_Files {
        	correlation.idl

        	correlationTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(couponvectors) : dcps {

  sharedname     = couponvectors
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	couponvectors.idl

  }

  IDL_Files {
        	couponvectors.idl

        	couponvectorsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(credit) : dcps {

  sharedname     = credit
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	credit.idl

  }

  IDL_Files {
        	credit.idl

        	creditTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(ctsmmcapletcalibration) : dcps {

  sharedname     = ctsmmcapletcalibration
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	ctsmmcapletcalibration.idl

  }

  IDL_Files {
        	ctsmmcapletcalibration.idl

        	ctsmmcapletcalibrationTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(curvestate) : dcps {

  sharedname     = curvestate
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	curvestate.idl

  }

  IDL_Files {
        	curvestate.idl

        	curvestateTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(defaulttermstructures) : dcps {

  sharedname     = defaulttermstructures
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	defaulttermstructures.idl

  }

  IDL_Files {
        	defaulttermstructures.idl

        	defaulttermstructuresTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(evolutiondescription) : dcps {

  sharedname     = evolutiondescription
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	evolutiondescription.idl

  }

  IDL_Files {
        	evolutiondescription.idl

        	evolutiondescriptionTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(exercise) : dcps {

  sharedname     = exercise
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	exercise.idl

  }

  IDL_Files {
        	exercise.idl

        	exerciseTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(forwardrateagreement) : dcps {

  sharedname     = forwardrateagreement
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	forwardrateagreement.idl

  }

  IDL_Files {
        	forwardrateagreement.idl

        	forwardrateagreementTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(handles) : dcps {

  sharedname     = handles
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	handles.idl

  }

  IDL_Files {
        	handles.idl

        	handlesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(qlIndex) : dcps {

  sharedname     = qlIndex
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	qlIndex.idl

  }

  IDL_Files {
        	qlIndex.idl

        	qlIndexTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(instruments) : dcps {

  sharedname     = instruments
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	instruments.idl

  }

  IDL_Files {
        	instruments.idl

        	instrumentsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(interpolation) : dcps {

  sharedname     = interpolation
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	interpolation.idl

  }

  IDL_Files {
        	interpolation.idl

        	interpolationTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(leg) : dcps {

  sharedname     = leg
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	leg.idl

  }

  IDL_Files {
        	leg.idl

        	legTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(marketmodelevolvers) : dcps {

  sharedname     = marketmodelevolvers
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	marketmodelevolvers.idl

  }

  IDL_Files {
        	marketmodelevolvers.idl

        	marketmodelevolversTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(marketmodels) : dcps {

  sharedname     = marketmodels
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	marketmodels.idl

  }

  IDL_Files {
        	marketmodels.idl

        	marketmodelsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(optimization) : dcps {

  sharedname     = optimization
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	optimization.idl

  }

  IDL_Files {
        	optimization.idl

        	optimizationTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(options) : dcps {

  sharedname     = options
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	options.idl

  }

  IDL_Files {
        	options.idl

        	optionsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(overnightindexedswap) : dcps {

  sharedname     = overnightindexedswap
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	overnightindexedswap.idl

  }

  IDL_Files {
        	overnightindexedswap.idl

        	overnightindexedswapTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(payoffs) : dcps {

  sharedname     = payoffs
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	payoffs.idl

  }

  IDL_Files {
        	payoffs.idl

        	payoffsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(piecewiseyieldcurve) : dcps {

  sharedname     = piecewiseyieldcurve
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	piecewiseyieldcurve.idl

  }

  IDL_Files {
        	piecewiseyieldcurve.idl

        	piecewiseyieldcurveTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(pricingengines) : dcps {

  sharedname     = pricingengines
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	pricingengines.idl

  }

  IDL_Files {
        	pricingengines.idl

        	pricingenginesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(processes) : dcps {

  sharedname     = processes
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	processes.idl

  }

  IDL_Files {
        	processes.idl

        	processesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(products) : dcps {

  sharedname     = products
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	products.idl

  }

  IDL_Files {
        	products.idl

        	productsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(quotes) : dcps {

  sharedname     = quotes
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	quotes.idl

  }

  IDL_Files {
        	quotes.idl

        	quotesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(randomsequencegenerator) : dcps {

  sharedname     = randomsequencegenerator
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	randomsequencegenerator.idl

  }

  IDL_Files {
        	randomsequencegenerator.idl

        	randomsequencegeneratorTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(rangeaccrual) : dcps {

  sharedname     = rangeaccrual
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	rangeaccrual.idl

  }

  IDL_Files {
        	rangeaccrual.idl

        	rangeaccrualTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(ratehelpers) : dcps {

  sharedname     = ratehelpers
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	ratehelpers.idl

  }

  IDL_Files {
        	ratehelpers.idl

        	ratehelpersTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(schedule) : dcps {

  sharedname     = schedule
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	schedule.idl

  }

  IDL_Files {
        	schedule.idl

        	scheduleTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(sequencestatistics) : dcps {

  sharedname     = sequencestatistics
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	sequencestatistics.idl

  }

  IDL_Files {
        	sequencestatistics.idl

        	sequencestatisticsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(settings) : dcps {

  sharedname     = settings
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	settings.idl

  }

  IDL_Files {
        	settings.idl

        	settingsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(shortratemodels) : dcps {

  sharedname     = shortratemodels
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	shortratemodels.idl

  }

  IDL_Files {
        	shortratemodels.idl

        	shortratemodelsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(smilesection) : dcps {

  sharedname     = smilesection
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	smilesection.idl

  }

  IDL_Files {
        	smilesection.idl

        	smilesectionTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(statistics) : dcps {

  sharedname     = statistics
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	statistics.idl

  }

  IDL_Files {
        	statistics.idl

        	statisticsTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(qlSwapNS) : dcps {

  sharedname     = qlSwapNS
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	qlSwapNS.idl

  }

  IDL_Files {
        	qlSwapNS.idl

        	qlSwapNSTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(swaption) : dcps {

  sharedname     = swaption
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	swaption.idl

  }

  IDL_Files {
        	swaption.idl

        	swaptionTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(swaptionvolstructure) : dcps {

  sharedname     = swaptionvolstructure
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	swaptionvolstructure.idl

  }

  IDL_Files {
        	swaptionvolstructure.idl

        	swaptionvolstructureTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(termstructures) : dcps {

  sharedname     = termstructures
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	termstructures.idl

  }

  IDL_Files {
        	termstructures.idl

        	termstructuresTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(timeseries) : dcps {

  sharedname     = timeseries
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	timeseries.idl

  }

  IDL_Files {
        	timeseries.idl

        	timeseriesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(utilities) : dcps {

  sharedname     = utilities
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	utilities.idl

  }

  IDL_Files {
        	utilities.idl

        	utilitiesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(vanillaswap) : dcps {

  sharedname     = vanillaswap
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	vanillaswap.idl

  }

  IDL_Files {
        	vanillaswap.idl

        	vanillaswapTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(volatilities) : dcps {

  sharedname     = volatilities
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	volatilities.idl

  }

  IDL_Files {
        	volatilities.idl

        	volatilitiesTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}
project(volatility) : dcps {

  sharedname     = volatility
  dynamicflags   = QLDDS_BUILD_DLL
  requires += tao_orbsvcs
  includes      += $(TAO_ROOT)/orbsvcs $(QLDDS_ROOT)/qldds_utils
  idlflags      += -I$(TAO_ROOT)/orbsvcs -I$(QLDDS_ROOT)/qldds_utils \
                   -Wb,export_macro=QLDDS_Export \
                   -Wb,export_include=../../qldds_utils/qldds_Export.h
  dcps_ts_flags += -I../../qldds_utils -Wb,export_macro=QLDDS_Export

  libpaths	+= $(QLDDS_ROOT)/qldds_utils
  libs		+= qldds_utils
  libout        = $(QLDDS_ROOT)/lib

  TypeSupport_Files {
        	volatility.idl

  }

  IDL_Files {
        	volatility.idl

        	volatilityTypeSupport.idl

  }

  Header_Files {
  }

  Source_Files {
  }

}


