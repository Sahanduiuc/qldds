/*
   Copyright (C) 2016 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in all
   copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   SOFTWARE.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      dds.no_nt/gensrc/stubs/stub.opendds.module

#ifndef marketmodels_IDL
#define marketmodels_IDL

#include <qldds_types.idl>

module marketmodels {

#pragma DCPS_DATA_TYPE "marketmodels::qlAbcdVol"
#pragma DCPS_DATA_KEY "marketmodels::qlAbcdVol instanceID" 

   struct qlAbcdVol { 
          string instanceID;
          
             string ObjectId;
             double A;
             double B;
             double C;
             double D;
             qldds_utils::DoubleSeq Ks;
             string Correlations;
             string EvolutionDescription;
             long Factors;
             qldds_utils::DoubleSeq InitialRates;
             qldds_utils::DoubleSeq Displacements;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlCotSwapToFwdAdapter"
#pragma DCPS_DATA_KEY "marketmodels::qlCotSwapToFwdAdapter instanceID" 

   struct qlCotSwapToFwdAdapter { 
          string instanceID;
          
             string ObjectId;
             string CoterminalModel;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFlatVol"
#pragma DCPS_DATA_KEY "marketmodels::qlFlatVol instanceID" 

   struct qlFlatVol { 
          string instanceID;
          
             string ObjectId;
             qldds_utils::DoubleSeq Volatilities;
             string Correlations;
             string EvolutionDescription;
             long Factors;
             qldds_utils::DoubleSeq InitialRates;
             qldds_utils::DoubleSeq Displacements;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFlatVolFactory"
#pragma DCPS_DATA_KEY "marketmodels::qlFlatVolFactory instanceID" 

   struct qlFlatVolFactory { 
          string instanceID;
          
             string ObjectId;
             double LongTermCorr;
             double Beta;
             qldds_utils::DoubleSeq Times;
             qldds_utils::DoubleSeq Volatilities;
             string YieldCurve;
             double Displacement;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFwdPeriodAdapter"
#pragma DCPS_DATA_KEY "marketmodels::qlFwdPeriodAdapter instanceID" 

   struct qlFwdPeriodAdapter { 
          string instanceID;
          
             string ObjectId;
             string LargeModel;
             long Period;
             long Offset;
             qldds_utils::DoubleSeq Displacements;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFwdToCotSwapAdapter"
#pragma DCPS_DATA_KEY "marketmodels::qlFwdToCotSwapAdapter instanceID" 

   struct qlFwdToCotSwapAdapter { 
          string instanceID;
          
             string ObjectId;
             string ForwardModel;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlPseudoRootFacade"
#pragma DCPS_DATA_KEY "marketmodels::qlPseudoRootFacade instanceID" 

   struct qlPseudoRootFacade { 
          string instanceID;
          
             string ObjectId;
             string Calibrator;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
