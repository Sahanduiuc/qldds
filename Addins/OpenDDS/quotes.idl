/*
   Copyright (C) 2016 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in all
   copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   SOFTWARE.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      qldds/gensrc/stubs/stub.opendds.module

#ifndef quotes_IDL
#define quotes_IDL

#include <qldds_types.idl>

module quotes {

#pragma DCPS_DATA_TYPE "quotes::qlCompositeQuote"
#pragma DCPS_DATA_KEY "quotes::qlCompositeQuote instanceID" 

   struct qlCompositeQuote { 
          string instanceID;
          
             string ObjectId;
             double Element1;
             double Element2;
             string Operator;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlEurodollarFuturesImpliedStdDevQuote"
#pragma DCPS_DATA_KEY "quotes::qlEurodollarFuturesImpliedStdDevQuote instanceID" 

   struct qlEurodollarFuturesImpliedStdDevQuote { 
          string instanceID;
          
             string ObjectId;
             double AtmForwardValue;
             double CallPrice;
             double PutPrice;
             double Strike;
             double Guess;
             double Accuracy;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlForwardSwapQuote"
#pragma DCPS_DATA_KEY "quotes::qlForwardSwapQuote instanceID" 

   struct qlForwardSwapQuote { 
          string instanceID;
          
             string ObjectId;
             string SwapIndex;
             double Spread;
             string ForwardStart;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlForwardValueQuote"
#pragma DCPS_DATA_KEY "quotes::qlForwardValueQuote instanceID" 

   struct qlForwardValueQuote { 
          string instanceID;
          
             string ObjectId;
             string IborIndex;
             string FixingDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlFuturesConvAdjustmentQuote"
#pragma DCPS_DATA_KEY "quotes::qlFuturesConvAdjustmentQuote instanceID" 

   struct qlFuturesConvAdjustmentQuote { 
          string instanceID;
          
             string ObjectId;
             string IborIndex;
             string ImmCode;
             double FuturesQuote;
             double Volatility;
             double MeanReversion;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlImpliedStdDevQuote"
#pragma DCPS_DATA_KEY "quotes::qlImpliedStdDevQuote instanceID" 

   struct qlImpliedStdDevQuote { 
          string instanceID;
          
             string ObjectId;
             string OptionType;
             double AtmForwardValue;
             double OptionPrice;
             double Strike;
             double Guess;
             double Accuracy;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlLastFixingQuote"
#pragma DCPS_DATA_KEY "quotes::qlLastFixingQuote instanceID" 

   struct qlLastFixingQuote { 
          string instanceID;
          
             string ObjectId;
             string Index;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlRelinkableHandleQuote"
#pragma DCPS_DATA_KEY "quotes::qlRelinkableHandleQuote instanceID" 

   struct qlRelinkableHandleQuote { 
          string instanceID;
          
             string ObjectId;
             string CurrentLink;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlSimpleQuote"
#pragma DCPS_DATA_KEY "quotes::qlSimpleQuote instanceID" 

   struct qlSimpleQuote { 
          string instanceID;
          
             string ObjectId;
             double Value;
             double TickValue;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "quotes::qlSimpleQuoteSetValue"
#pragma DCPS_DATA_KEY "quotes::qlSimpleQuoteSetValue instanceID" 

   struct qlSimpleQuoteSetValue { 
          string instanceID;
          
             string ObjectId;
             double Value;
             boolean Trigger; 
   };
};

#endif
