/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      ocm/qldds/gensrc/stubs/stub.opendds.module

#ifndef swaptionvolstructure_IDL
#define swaptionvolstructure_IDL

#include <qldds_types.idl>

module swaptionvolstructure {

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlConstantSwaptionVolatility"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlConstantSwaptionVolatility instanceID" 

   struct qlConstantSwaptionVolatility { 
          string instanceID;
          
             string ObjectId;
             long NDays;
             string Calendar;
             string BusinessDayConvention;
             double Volatility;
             string DayCounter;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlRelinkableHandleSwaptionVolatilityStructure"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlRelinkableHandleSwaptionVolatilityStructure instanceID" 

   struct qlRelinkableHandleSwaptionVolatilityStructure { 
          string instanceID;
          
             string ObjectId;
             string CurrentLink;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlSmileSectionByCube"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlSmileSectionByCube instanceID" 

   struct qlSmileSectionByCube { 
          string instanceID;
          
             string ObjectId;
             string VolCube;
             string OptionDate;
             string SwapTenor;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlSmileSectionByCube2"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlSmileSectionByCube2 instanceID" 

   struct qlSmileSectionByCube2 { 
          string instanceID;
          
             string ObjectId;
             string VolCube;
             string OptionDate;
             string SwapTenor;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlSpreadedSwaptionVolatility"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlSpreadedSwaptionVolatility instanceID" 

   struct qlSpreadedSwaptionVolatility { 
          string instanceID;
          
             string ObjectId;
             string BaseVolStructure;
             double Spread;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlSwaptionVTSMatrix"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlSwaptionVTSMatrix instanceID" 

   struct qlSwaptionVTSMatrix { 
          string instanceID;
          
             string ObjectId;
             string Calendar;
             string BusinessDayConvention;
             qldds_utils::StringSeq OptionTenors;
             qldds_utils::StringSeq SwapTenors;
             qldds_utils::Matrix Volatilities;
             string DayCounter;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlSwaptionVolCube1"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlSwaptionVolCube1 instanceID" 

   struct qlSwaptionVolCube1 { 
          string instanceID;
          
             string ObjectId;
             string AtmVolStructure;
             qldds_utils::StringSeq OptionTenors;
             qldds_utils::StringSeq SwapTenors;
             qldds_utils::DoubleSeq StrikeSpreads;
             qldds_utils::Matrix SpreadVols;
             string SwapIndexBase;
             string ShortSwapIndexBase;
             boolean VegaWeightedSmileFit;
             qldds_utils::Matrix Guess;
             qldds_utils::BooleanSeq IsFixed;
             boolean IsAtmCalibrated;
             string EndCriteria;
             double MaxErrorTol;
             string OptMethod;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "swaptionvolstructure::qlSwaptionVolCube2"
#pragma DCPS_DATA_KEY "swaptionvolstructure::qlSwaptionVolCube2 instanceID" 

   struct qlSwaptionVolCube2 { 
          string instanceID;
          
             string ObjectId;
             string AtmVolStructure;
             qldds_utils::StringSeq OptionTenor;
             qldds_utils::StringSeq SwapTenor;
             qldds_utils::DoubleSeq StrikeSpreads;
             qldds_utils::Matrix SpreadVols;
             string SwapIndexBase;
             string ShortSwapIndexBase;
             boolean VegaWeightedSmileFit;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
