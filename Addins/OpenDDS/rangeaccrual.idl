/*
   Copyright (C) 2016 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in all
   copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   SOFTWARE.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      dds.no_nt/gensrc/stubs/stub.opendds.module

#ifndef rangeaccrual_IDL
#define rangeaccrual_IDL

#include <qldds_types.idl>

module rangeaccrual {

#pragma DCPS_DATA_TYPE "rangeaccrual::qlRangeAccrualFloatersCoupon"
#pragma DCPS_DATA_KEY "rangeaccrual::qlRangeAccrualFloatersCoupon instanceID" 

   struct qlRangeAccrualFloatersCoupon { 
          string instanceID;
          
             string ObjectId;
             double Nominal;
             string PaymentDate;
             string IborIndex;
             string StartDate;
             string EndDate;
             long FixingDays;
             string DayCountID;
             double Gearings;
             double Spreads;
             string RefPeriodStart;
             string RefPeriodEnd;
             string ObserSchedID;
             double LowerTrigger;
             double UpperTrigger;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "rangeaccrual::qlRangeAccrualFloatersCouponFromLeg"
#pragma DCPS_DATA_KEY "rangeaccrual::qlRangeAccrualFloatersCouponFromLeg instanceID" 

   struct qlRangeAccrualFloatersCouponFromLeg { 
          string instanceID;
          
             string ObjectId;
             string RangeAccrualLeg;
             long Position;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "rangeaccrual::qlRangeAccrualPricerByBgm"
#pragma DCPS_DATA_KEY "rangeaccrual::qlRangeAccrualPricerByBgm instanceID" 

   struct qlRangeAccrualPricerByBgm { 
          string instanceID;
          
             string ObjectId;
             double Correlation;
             string SmileOnStartDateID;
             string SmileOnEndDateID;
             boolean WithSmile;
             boolean ByCallSpread;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
