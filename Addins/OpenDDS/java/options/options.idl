/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      Users/mkipnis/qldds/gensrc/stubs/stub.opendds.module

#ifndef options_IDL
#define options_IDL

#include <qldds_types.idl>

module options {

#pragma DCPS_DATA_TYPE "options::qlBarrierOption"
#pragma DCPS_DATA_KEY "options::qlBarrierOption instanceID" 

   struct qlBarrierOption { 
          string instanceID;
          
             string ObjectId;
             string BarrierType;
             double Barrier;
             double Rebate;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlCaAsianOption"
#pragma DCPS_DATA_KEY "options::qlCaAsianOption instanceID" 

   struct qlCaAsianOption { 
          string instanceID;
          
             string ObjectId;
             string AverageType;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlDaAsianOption"
#pragma DCPS_DATA_KEY "options::qlDaAsianOption instanceID" 

   struct qlDaAsianOption { 
          string instanceID;
          
             string ObjectId;
             string AverageType;
             double RunningAccumulator;
             long PastFixings;
             qldds_utils::StringSeq FixingDates;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlDividendVanillaOption"
#pragma DCPS_DATA_KEY "options::qlDividendVanillaOption instanceID" 

   struct qlDividendVanillaOption { 
          string instanceID;
          
             string ObjectId;
             string Payoff;
             string Exercise;
             qldds_utils::StringSeq DividendDates;
             qldds_utils::DoubleSeq Dividends;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlEuropeanOption"
#pragma DCPS_DATA_KEY "options::qlEuropeanOption instanceID" 

   struct qlEuropeanOption { 
          string instanceID;
          
             string ObjectId;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlForwardVanillaOption"
#pragma DCPS_DATA_KEY "options::qlForwardVanillaOption instanceID" 

   struct qlForwardVanillaOption { 
          string instanceID;
          
             string ObjectId;
             double Moneyness;
             string ResetDate;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlQuantoForwardVanillaOption"
#pragma DCPS_DATA_KEY "options::qlQuantoForwardVanillaOption instanceID" 

   struct qlQuantoForwardVanillaOption { 
          string instanceID;
          
             string ObjectId;
             double Moneyness;
             string ResetDate;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlQuantoVanillaOption"
#pragma DCPS_DATA_KEY "options::qlQuantoVanillaOption instanceID" 

   struct qlQuantoVanillaOption { 
          string instanceID;
          
             string ObjectId;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "options::qlVanillaOption"
#pragma DCPS_DATA_KEY "options::qlVanillaOption instanceID" 

   struct qlVanillaOption { 
          string instanceID;
          
             string ObjectId;
             string Payoff;
             string Exercise;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
