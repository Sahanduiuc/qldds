/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      Users/mkipnis/qldds/gensrc/stubs/stub.opendds.module

#ifndef correlation_IDL
#define correlation_IDL

#include <qldds_types.idl>

module correlation {

#pragma DCPS_DATA_TYPE "correlation::qlCotSwapFromFwdCorrelation"
#pragma DCPS_DATA_KEY "correlation::qlCotSwapFromFwdCorrelation instanceID" 

   struct qlCotSwapFromFwdCorrelation { 
          string instanceID;
          
             string ObjectId;
             string FwdCorr;
             string CurveState;
             double Displacement;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "correlation::qlExponentialForwardCorrelation"
#pragma DCPS_DATA_KEY "correlation::qlExponentialForwardCorrelation instanceID" 

   struct qlExponentialForwardCorrelation { 
          string instanceID;
          
             string ObjectId;
             qldds_utils::DoubleSeq RateTimes;
             double LongTermCorr;
             double Beta;
             double Gamma;
             qldds_utils::DoubleSeq Times;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "correlation::qlHistoricalForwardRatesAnalysis"
#pragma DCPS_DATA_KEY "correlation::qlHistoricalForwardRatesAnalysis instanceID" 

   struct qlHistoricalForwardRatesAnalysis { 
          string instanceID;
          
             string ObjectId;
             string SequenceStats;
             string StartDate;
             string EndDate;
             string Step;
             string IborIndex;
             string InitialGap;
             string Horizon;
             qldds_utils::StringSeq IborIndexes;
             qldds_utils::StringSeq SwapIndexes;
             string DayCounter;
             string TraitsID;
             string InterpolatorID;
             double BootstrapAccuracy;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "correlation::qlHistoricalRatesAnalysis"
#pragma DCPS_DATA_KEY "correlation::qlHistoricalRatesAnalysis instanceID" 

   struct qlHistoricalRatesAnalysis { 
          string instanceID;
          
             string ObjectId;
             string SequenceStats;
             string StartDate;
             string EndDate;
             string Step;
             qldds_utils::StringSeq InterestRateIndexes;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "correlation::qlMarketModelLmLinearExponentialCorrelationModel"
#pragma DCPS_DATA_KEY "correlation::qlMarketModelLmLinearExponentialCorrelationModel instanceID" 

   struct qlMarketModelLmLinearExponentialCorrelationModel { 
          string instanceID;
          
             string ObjectId;
             long Size;
             double Rho;
             double Beta;
             long Factors;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
