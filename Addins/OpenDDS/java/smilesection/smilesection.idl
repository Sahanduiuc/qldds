/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      Users/mkipnis/qldds/gensrc/stubs/stub.opendds.module

#ifndef smilesection_IDL
#define smilesection_IDL

#include <qldds_types.idl>

module smilesection {

#pragma DCPS_DATA_TYPE "smilesection::qlFlatSmileSection"
#pragma DCPS_DATA_KEY "smilesection::qlFlatSmileSection instanceID" 

   struct qlFlatSmileSection { 
          string instanceID;
          
             string ObjectId;
             string OptionDate;
             double Volatility;
             string DayCounter;
             string RefDate;
             double AtmValue;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "smilesection::qlInterpolatedSmileSection"
#pragma DCPS_DATA_KEY "smilesection::qlInterpolatedSmileSection instanceID" 

   struct qlInterpolatedSmileSection { 
          string instanceID;
          
             string ObjectId;
             string OptionDate;
             qldds_utils::DoubleSeq Strikes;
             qldds_utils::DoubleSeq StdDevs;
             double AtmLevel;
             string DayCounter;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "smilesection::qlSabrInterpolatedSmileSection"
#pragma DCPS_DATA_KEY "smilesection::qlSabrInterpolatedSmileSection instanceID" 

   struct qlSabrInterpolatedSmileSection { 
          string instanceID;
          
             string ObjectId;
             string OptionDate;
             double ForwardRate;
             qldds_utils::DoubleSeq Strike;
             boolean FloatingStrike;
             double AtmVolatility;
             qldds_utils::DoubleSeq VolatilitySpreads;
             double Alpha;
             double Beta;
             double Nu;
             double Rho;
             boolean AlphaIsFixed;
             boolean BetaIsFixed;
             boolean NuIsFixed;
             boolean RhoIsFixed;
             boolean VegaWeighted;
             string EndCriteria;
             string Method;
             string DayCounter;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "smilesection::qlSabrInterpolatedSmileSection1"
#pragma DCPS_DATA_KEY "smilesection::qlSabrInterpolatedSmileSection1 instanceID" 

   struct qlSabrInterpolatedSmileSection1 { 
          string instanceID;
          
             string ObjectId;
             string OptionDate;
             double ForwardRate;
             qldds_utils::DoubleSeq Strike;
             boolean FloatingStrike;
             double AtmVolatility;
             qldds_utils::DoubleSeq VolatilitySpreads;
             double Alpha;
             double Beta;
             double Nu;
             double Rho;
             boolean AlphaIsFixed;
             boolean BetaIsFixed;
             boolean NuIsFixed;
             boolean RhoIsFixed;
             boolean VegaWeighted;
             string EndCriteria;
             string Method;
             string DayCounter;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "smilesection::qlSabrSmileSection"
#pragma DCPS_DATA_KEY "smilesection::qlSabrSmileSection instanceID" 

   struct qlSabrSmileSection { 
          string instanceID;
          
             string ObjectId;
             double OptionTime;
             qldds_utils::DoubleSeq Strikes;
             qldds_utils::DoubleSeq StdDevs;
             double Forward;
             double Alpha;
             double Beta;
             double Nu;
             double Rho;
             boolean AlphaIsFixed;
             boolean BetaIsFixed;
             boolean NuIsFixed;
             boolean RhoIsFixed;
             boolean VegaWeighted;
             string EndCriteria;
             string Method;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
