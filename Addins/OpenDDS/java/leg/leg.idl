/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      Users/mkipnis/qldds/gensrc/stubs/stub.opendds.module

#ifndef leg_IDL
#define leg_IDL

#include <qldds_types.idl>

module leg {

#pragma DCPS_DATA_TYPE "leg::qlInterestRate"
#pragma DCPS_DATA_KEY "leg::qlInterestRate instanceID" 

   struct qlInterestRate { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             string DayCounter;
             string Compounding;
             string Frequency;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "leg::qlLeg"
#pragma DCPS_DATA_KEY "leg::qlLeg instanceID" 

   struct qlLeg { 
          string instanceID;
          
             string ObjectId;
             qldds_utils::DoubleSeq Amounts;
             qldds_utils::StringSeq Dates;
             boolean ToBeSorted;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "leg::qlLegFromCapFloor"
#pragma DCPS_DATA_KEY "leg::qlLegFromCapFloor instanceID" 

   struct qlLegFromCapFloor { 
          string instanceID;
          
             string ObjectId;
             string CapFloor;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "leg::qlLegFromSwap"
#pragma DCPS_DATA_KEY "leg::qlLegFromSwap instanceID" 

   struct qlLegFromSwap { 
          string instanceID;
          
             string ObjectId;
             string Swap;
             long LegNumber;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "leg::qlLegSetCouponPricers"
#pragma DCPS_DATA_KEY "leg::qlLegSetCouponPricers instanceID" 

   struct qlLegSetCouponPricers { 
          string instanceID;
          
             string ObjectId;
             qldds_utils::StringSeq FloatingRateCouponPricer;
             boolean Trigger; 
   };

#pragma DCPS_DATA_TYPE "leg::qlMultiPhaseLeg"
#pragma DCPS_DATA_KEY "leg::qlMultiPhaseLeg instanceID" 

   struct qlMultiPhaseLeg { 
          string instanceID;
          
             string ObjectId;
             qldds_utils::StringSeq LegIDs;
             boolean ToBeSorted;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
