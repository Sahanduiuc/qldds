/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      ocm/qldds/gensrc/stubs/stub.opendds.module

#ifndef ratehelpers_IDL
#define ratehelpers_IDL

#include <qldds_types.idl>

module ratehelpers {

#pragma DCPS_DATA_TYPE "ratehelpers::qlBondHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlBondHelper instanceID" 

   struct qlBondHelper { 
          string instanceID;
          
             string ObjectId;
             double Price;
             string Bond;
             boolean UseCleanPrice;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlDatedOISRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlDatedOISRateHelper instanceID" 

   struct qlDatedOISRateHelper { 
          string instanceID;
          
             string ObjectId;
             string StartDate;
             string EndDate;
             double FixedRate;
             string ONIndex;
             string DiscountingCurve;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlDepositRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlDepositRateHelper instanceID" 

   struct qlDepositRateHelper { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             string IborIndex;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlDepositRateHelper2"
#pragma DCPS_DATA_KEY "ratehelpers::qlDepositRateHelper2 instanceID" 

   struct qlDepositRateHelper2 { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             string Tenor;
             long FixingDays;
             string Calendar;
             string Convention;
             boolean EndOfMonth;
             string DayCounter;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFixedRateBondHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlFixedRateBondHelper instanceID" 

   struct qlFixedRateBondHelper { 
          string instanceID;
          
             string ObjectId;
             double Price;
             long SettlementDays;
             double FaceAmount;
             string ScheduleID;
             qldds_utils::DoubleSeq Coupons;
             string DayCounter;
             string PaymentBDC;
             double Redemption;
             string IssueDate;
             string PaymentCalendar;
             string ExCouponPeriod;
             string ExCouponCalendar;
             string ExCouponBDC;
             boolean ExCouponEndOfMonth;
             boolean UseCleanPrice;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFraRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlFraRateHelper instanceID" 

   struct qlFraRateHelper { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             string PeriodToStart;
             string IborIndex;
             string PillarDate;
             string CustomPillarDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFraRateHelper2"
#pragma DCPS_DATA_KEY "ratehelpers::qlFraRateHelper2 instanceID" 

   struct qlFraRateHelper2 { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             string PeriodToStart;
             long LengthInMonths;
             long FixingDays;
             string Calendar;
             string Convention;
             boolean EndOfMonth;
             string DayCounter;
             string PillarDate;
             string CustomPillarDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFuturesRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlFuturesRateHelper instanceID" 

   struct qlFuturesRateHelper { 
          string instanceID;
          
             string ObjectId;
             double Price;
             string FuturesType;
             string FuturesDate;
             string IborIndex;
             double ConvexityAdjQuote;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFuturesRateHelper2"
#pragma DCPS_DATA_KEY "ratehelpers::qlFuturesRateHelper2 instanceID" 

   struct qlFuturesRateHelper2 { 
          string instanceID;
          
             string ObjectId;
             double Price;
             string FuturesType;
             string FuturesDate;
             long LengthInMonths;
             string Calendar;
             string Convention;
             boolean EndOfMonth;
             string DayCounter;
             double ConvexityAdjQuote;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFuturesRateHelper3"
#pragma DCPS_DATA_KEY "ratehelpers::qlFuturesRateHelper3 instanceID" 

   struct qlFuturesRateHelper3 { 
          string instanceID;
          
             string ObjectId;
             double Price;
             string FuturesType;
             string FuturesDate;
             string EndDate;
             string DayCounter;
             double ConvexityAdjQuote;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlFxSwapRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlFxSwapRateHelper instanceID" 

   struct qlFxSwapRateHelper { 
          string instanceID;
          
             string ObjectId;
             double FwdPoint;
             double SpotFx;
             string Tenor;
             long FixingDays;
             string Calendar;
             string Convention;
             boolean EndOfMonth;
             boolean IsFxBaseCurrencyCollateralCurrency;
             string CollateralCurve;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlOISRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlOISRateHelper instanceID" 

   struct qlOISRateHelper { 
          string instanceID;
          
             string ObjectId;
             long SettlDays;
             string Tenor;
             double FixedRate;
             string ONIndex;
             string DiscountingCurve;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlRateHelperImpliedQuote"
#pragma DCPS_DATA_KEY "ratehelpers::qlRateHelperImpliedQuote instanceID" 

   struct qlRateHelperImpliedQuote { 
          string instanceID;
          
             string ObjectId;
             boolean Trigger; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlRateHelperQuoteError"
#pragma DCPS_DATA_KEY "ratehelpers::qlRateHelperQuoteError instanceID" 

   struct qlRateHelperQuoteError { 
          string instanceID;
          
             string ObjectId;
             boolean Trigger; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlRateHelperQuoteIsValid"
#pragma DCPS_DATA_KEY "ratehelpers::qlRateHelperQuoteIsValid instanceID" 

   struct qlRateHelperQuoteIsValid { 
          string instanceID;
          
             string ObjectId;
             boolean Trigger; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlRateHelperQuoteName"
#pragma DCPS_DATA_KEY "ratehelpers::qlRateHelperQuoteName instanceID" 

   struct qlRateHelperQuoteName { 
          string instanceID;
          
             string ObjectId;
             boolean Trigger; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlRateHelperQuoteValue"
#pragma DCPS_DATA_KEY "ratehelpers::qlRateHelperQuoteValue instanceID" 

   struct qlRateHelperQuoteValue { 
          string instanceID;
          
             string ObjectId;
             boolean Trigger; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlSwapRateHelper"
#pragma DCPS_DATA_KEY "ratehelpers::qlSwapRateHelper instanceID" 

   struct qlSwapRateHelper { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             string SwapIndex;
             double Spread;
             string ForwardStart;
             string DiscountingCurve;
             string PillarDate;
             string CustomPillarDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "ratehelpers::qlSwapRateHelper2"
#pragma DCPS_DATA_KEY "ratehelpers::qlSwapRateHelper2 instanceID" 

   struct qlSwapRateHelper2 { 
          string instanceID;
          
             string ObjectId;
             double Rate;
             long SettlDays;
             string Tenor;
             string Calendar;
             string FixedLegFrequency;
             string FixedLegConvention;
             string FixedLegDayCounter;
             string IborIndex;
             double Spread;
             string ForwardStart;
             string DiscountingCurve;
             string PillarDate;
             string CustomPillarDate;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
