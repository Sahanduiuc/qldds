/*
   Copyright (C) 2015 Mike Kipnis

   This file is part of QLDDS, a free-software/open-source library
   for utilization of QuantLib in the distributed envrionment via DDS.

   QLDDS is free software: you can redistribute it and/or modify it
   under the terms of the QLDDS license.  You should have received a
   copy of the license along with this program; if not, please email
   <dev@qldds.org>. The license is also available online at
   <http://qldds.org/qldds-license/>.

   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
   FOR A PARTICULAR PURPOSE.  See the license for more details.
*/
// This file was generated automatically by qldds_gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      Users/mkipnis/qldds/gensrc/stubs/stub.opendds.module

#ifndef marketmodels_IDL
#define marketmodels_IDL

#include <qldds_types.idl>

module marketmodels {

#pragma DCPS_DATA_TYPE "marketmodels::qlAbcdVol"
#pragma DCPS_DATA_KEY "marketmodels::qlAbcdVol instanceID" 

   struct qlAbcdVol { 
          string instanceID;
          
             string ObjectId;
             double A;
             double B;
             double C;
             double D;
             qldds_utils::DoubleSeq Ks;
             string Correlations;
             string EvolutionDescription;
             long Factors;
             qldds_utils::DoubleSeq InitialRates;
             qldds_utils::DoubleSeq Displacements;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlCotSwapToFwdAdapter"
#pragma DCPS_DATA_KEY "marketmodels::qlCotSwapToFwdAdapter instanceID" 

   struct qlCotSwapToFwdAdapter { 
          string instanceID;
          
             string ObjectId;
             string CoterminalModel;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFlatVol"
#pragma DCPS_DATA_KEY "marketmodels::qlFlatVol instanceID" 

   struct qlFlatVol { 
          string instanceID;
          
             string ObjectId;
             qldds_utils::DoubleSeq Volatilities;
             string Correlations;
             string EvolutionDescription;
             long Factors;
             qldds_utils::DoubleSeq InitialRates;
             qldds_utils::DoubleSeq Displacements;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFlatVolFactory"
#pragma DCPS_DATA_KEY "marketmodels::qlFlatVolFactory instanceID" 

   struct qlFlatVolFactory { 
          string instanceID;
          
             string ObjectId;
             double LongTermCorr;
             double Beta;
             qldds_utils::DoubleSeq Times;
             qldds_utils::DoubleSeq Volatilities;
             string YieldCurve;
             double Displacement;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFwdPeriodAdapter"
#pragma DCPS_DATA_KEY "marketmodels::qlFwdPeriodAdapter instanceID" 

   struct qlFwdPeriodAdapter { 
          string instanceID;
          
             string ObjectId;
             string LargeModel;
             long Period;
             long Offset;
             qldds_utils::DoubleSeq Displacements;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlFwdToCotSwapAdapter"
#pragma DCPS_DATA_KEY "marketmodels::qlFwdToCotSwapAdapter instanceID" 

   struct qlFwdToCotSwapAdapter { 
          string instanceID;
          
             string ObjectId;
             string ForwardModel;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };

#pragma DCPS_DATA_TYPE "marketmodels::qlPseudoRootFacade"
#pragma DCPS_DATA_KEY "marketmodels::qlPseudoRootFacade instanceID" 

   struct qlPseudoRootFacade { 
          string instanceID;
          
             string ObjectId;
             string Calibrator;
             boolean Permanent;
             boolean Trigger;
             boolean Overwrite; 
   };
};

#endif
